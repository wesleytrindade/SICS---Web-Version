@model SICS___WEB_2._0.Models.ViewModels.CadastroFrascoViewModel

@{
    ViewBag.Title = "Frascos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@if (Model.listaReagente.Count > 0)
{
    <div class="featurette-divider" id="divisor">

        <h2 style="color:white"> Cadastro de Frascos</h2>
    </div>


  using(Html.BeginForm())
  {
            @Html.AntiForgeryToken()

    <div class="form-horizontal" id="formulario">
        @Html.ValidationSummary(true)
        <div class="form-group">

            @Html.LabelFor(model => model.selectedReagente, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.selectedReagente, new SelectList(Model.listaReagente, "Value", "Text"), htmlAttributes: new { @id = "listareagentes", @onchange = "mudaGet()" })
                @Html.ValidationMessageFor(model => model.selectedReagente)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.frasco_estoque, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.frasco_estoque, htmlAttributes: new { disabled = true })
                @Html.ValidationMessageFor(model => model.frasco_estoque)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.qtde_frasco, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.qtde_frasco, htmlAttributes: new { @id = "cadfrasco", @onchange = "verificaMaximo()" })
                @Html.ValidationMessageFor(model => model.qtde_frasco)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.validade, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.validade, htmlAttributes: new { @id = "datavalidade", @placeholder = "dd/mm/aaaa", @value = DateTime.Today.ToString("dd/MM/yyyy") })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estoque_maximo, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.estoque_maximo, htmlAttributes: new { disabled = true })
            </div>


            <div class="form-group">

                @Html.LabelFor(model => model.selectedFabricante, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.selectedFabricante, new SelectList(Model.listaFabricantes, "Value", "Text"))
                    @Html.ValidationMessageFor(model => model.selectedFabricante)
                </div>
            </div>




            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Cadastrar" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>



        <script>

            function verificaMaximo() {
                var x = document.getElementById("cadfrasco");
                var y = document.getElementById("estoquemaximo");

                if (x > y) {

                    alert("Valor do frasco superior ao estoque máximo!");
                    document.getElementById("cadfrasco").value = "";
                }
            }

            function mudaGet() {


            }


        </script>

  }
}


else

{
        <script>

            window.onload = semReagentes();
          function semReagentes() {
              alert("Não há reagentes cadastrados!");
              window.location = "Reagentes";
          
        </script>
}







