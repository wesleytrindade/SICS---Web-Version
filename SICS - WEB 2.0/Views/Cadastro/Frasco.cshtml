@model SICS___WEB_2._0.Models.ViewModels.CadastroFrascoViewModel

@{
    ViewBag.Title = "SICS - Cadastrar Frascos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="featurette-divider" id="divisor">

    <h2 style="color:white"> Cadastro de Frascos</h2>
</div>

@if (!(Model.listaFabricantes.Count > 0) || !(Model.listaGrupo.Count > 0))
{
    if (!(Model.listaFabricantes.Count > 0))
    {
        <script>
            window.onload = semFabricantes();
            function semFabricantes() {
                alert("Favor cadastrar os fabricantes!");
                window.location = "Fabricante";
            }

        </script>
    }

    else if (!(Model.listaGrupo.Count > 0))
    {
        <script>
            window.onload = semGrupos();
            function semGrupos() {
                alert("Favor cadastrar os grupos!");
                window.location = "Grupo";
            }
        </script>
    }


}

else

{

    using (Html.BeginForm("Frasco", "Cadastro", FormMethod.Get, htmlAttributes: new { @id = "busca" }))
    {

        <div class="form-horizontal" id="formulario-top">
            @Html.ValidationSummary(true)
            <div class="form-group">

                @Html.LabelFor(model => model.listaGrupo, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
                <div class="col-md-3">
                    @Html.DropDownList("selectedGrupo", new SelectList(Model.listaGrupo, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "listagrupo", @onchange = "mudaGet()" })
                    @Html.ValidationMessageFor(model => model.listaGrupo)
                </div>
            </div>

            <div class="form-group">

                
                @Html.LabelFor(model => model.selectedReagente, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
                <div class="col-md-3">
                    @Html.DropDownList("selectedReagente", new SelectList(Model.listaReagente, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "listareagente", @onchange = "mudaGet()",@disabled = "true" })
                    @Html.ValidationMessageFor(model => model.listaReagente)
                </div>

            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.frasco_estoque, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.frasco_estoque, htmlAttributes: new { @class = "form-control", disabled = true })
                    @Html.ValidationMessageFor(model => model.frasco_estoque)
                </div>
            </div>

        </div>

    }


    using (Html.BeginForm("Frasco", "Cadastro", FormMethod.Post))
    {

        @Html.AntiForgeryToken()
        <div class="form-horizontal" id="formulario">


            <div class="form-group">
                @Html.LabelFor(model => model.qtde_frasco, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.qtde_frasco, htmlAttributes: new { @class = "form-control", @id = "cadfrasco", @onchange = "verificaMaximo()" })
                    @Html.ValidationMessageFor(model => model.qtde_frasco)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.validade, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.validade, htmlAttributes: new { @class = "form-control", @id = "validade", @placeholder = "dd/mm/aaaa", @onchange = "ajustaData()" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.estoque_maximo, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.estoque_maximo, htmlAttributes: new { @class = "form-control", disabled = true })
                </div>
            </div>


            <div class="form-group">

                @Html.LabelFor(model => model.selectedFabricante, htmlAttributes: new { @class = "control-label col-md-2", @id = "labelform" })
                <div class="col-md-2">
                    @Html.DropDownListFor(model => model.selectedFabricante, new SelectList(Model.listaFabricantes, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.selectedFabricante)
                </div>
            </div>




            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Cadastrar" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    if (ViewBag.semReagentes == true)
    {
        <script>
            window.onload = semReagentesf();
            function semReagentesf() {
                alert("Não há reagentes neste grupo!");
                document.getElementById("listareagente").disabled = true;
            }
        </script>
    }

    if(ViewBag.desativaReag == false)
    {
        <script>

            window.onload = desativaReag();

            function desativaReag() {

                document.getElementById("listareagente").disabled = false;
            }
        </script>
    }


    <script>

        function verificaMaximo() {
            var x = document.getElementById("cadfrasco");
            var y = document.getElementById("estoquemaximo");

            if (x > y) {

                alert("Valor do frasco superior ao estoque máximo!");
                document.getElementById("cadfrasco").value = "";
            }
        }

        function mudaGet() {

            document.getElementById("busca").submit();

        }

        function ajustaData() {

            var data = document.getElementById("validade").value;
            var dia = data.substr(0, 2);
            var mes = data.substr(4, 5);
            var ano = data.substr(7, 11);

            if (data.lenght == 2) {

                if (dia < 31 && dia > 0) {
                    document.getElementById("validade").value = data + "/";
                }

                else {

                    dataInvalida();
                }
            }

            else if (data.lenght == 5) {

                campo.value = data + "/"
            }

            else if (data.lenght > 11) {

                dataInvalida(campo);
            }


        }

        function dataInvalida() {

            alert("Data inválida!");
            campo.value = "";
        }


    </script>


}










